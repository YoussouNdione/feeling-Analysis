# Generated by Django 4.2.10 on 2025-03-29 20:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('matricule', models.CharField(max_length=20, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'db_table': 'utilisateur',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CibleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('libelle', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Enquete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('est_active', models.BooleanField(default=True)),
                ('createur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enquetes_creees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enquête',
                'verbose_name_plural': 'Enquêtes',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profil_administrateur', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organisateur',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profil_organisateur', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionnaireEnquete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('enquete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaires', to='api.enquete')),
            ],
            options={
                'verbose_name': 'Questionnaire',
                'verbose_name_plural': 'Questionnaires',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.TextField()),
                ('est_obligatoire', models.BooleanField(default=True)),
                ('ordre', models.PositiveIntegerField()),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='api.questionnaireenquete')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.typequestion')),
            ],
            options={
                'ordering': ['ordre'],
            },
        ),
        migrations.CreateModel(
            name='Filiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('libelle', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filieres', to='api.departement')),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('libelle', models.CharField(max_length=100)),
                ('annee_academique', models.CharField(max_length=9)),
                ('filiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='api.filiere')),
            ],
        ),
        migrations.CreateModel(
            name='CibleEnquete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.classe')),
                ('departement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.departement')),
                ('enquete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cibles', to='api.enquete')),
                ('filiere', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.filiere')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.cibletype')),
            ],
        ),
        migrations.CreateModel(
            name='ChoixReponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.CharField(max_length=255)),
                ('ordre', models.PositiveIntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choix', to='api.question')),
            ],
            options={
                'ordering': ['ordre'],
            },
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.role'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profil_etudiant', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('annee_obtention_diplome', models.IntegerField(blank=True, null=True)),
                ('est_sorti', models.BooleanField(default=False)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='etudiants', to='api.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte_libre', models.TextField(blank=True, null=True)),
                ('sentiment_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1.0), django.core.validators.MaxValueValidator(1.0)])),
                ('date_reponse', models.DateTimeField(auto_now_add=True)),
                ('choix_reponse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reponses', to='api.choixreponse')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='api.question')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='api.etudiant')),
            ],
            options={
                'unique_together': {('question', 'etudiant')},
            },
        ),
        migrations.CreateModel(
            name='ParticipationEnquete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_participation', models.DateTimeField(auto_now_add=True)),
                ('est_completee', models.BooleanField(default=False)),
                ('enquete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='api.enquete')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='api.etudiant')),
            ],
            options={
                'verbose_name': 'Participation',
                'verbose_name_plural': 'Participations',
                'unique_together': {('enquete', 'etudiant')},
            },
        ),
    ]
